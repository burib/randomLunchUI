# The name of the app.
name: 'randomlunch-ui'

accounts:
  # awsAccountName: randomlunchdev
  - name: 'devaccount'
    account_number: '952080297105'
    default_region: 'eu-west-1'
  # yolo deploy-infra --account prodaccount
  # awsAccountName: randomlunch
  - name: 'prodaccount'
    account_number: '206670076487'
    default_region: 'eu-west-1'

templates:
  # Baseline infrastructure templates for an entire account.
  # yolo deploy-infra --account devaccount
  # yolo deploy-infra --account prodaccount
  account:
    path: "cloudformation/account/{{ account.name }}"
    region: "us-east-1"
    params:
      DomainName: 'randomlunch.burib.net'
  stage:
    # Relative or absolute path to a directory containing CloudFormation
    # templates for the stage.
    path: 'cloudformation/stage'
    # `params` is for injecting any required parameters to the top-level
    # CloudFormation stack.
    params:
      Stage: '{{ stage.name }}'
      APIPrefix: 'rnd'
      ApplicationName: 'randomlunch'
      DomainName: 'randomlunch.burib.net'
      # randomlunch.burib.net under devaccount
      CertificateArnProd: '{{ account.outputs.DomainCertificateProdArn }}'
      # dev.randomlunch.burib.net under devaccount
      CertificateArnDev: '{{ account.outputs.DomainCertificateDevArn }}'
      # *.dev.randomlunch.burib.net under devaccount
      CertificateArnDevWildcard: '{{ account.outputs.DomainCertificateDevWildCardArn }}'
stages:
  # "default" contains configs which are used for custom ad-hoc stages.
  # For example, you may want to deploy a custom test stage for yourself,
  # such as "alice" or "bob".
  # As a result,
  default:
    account: 'devaccount'
    region: 'eu-west-1'
  dev:
    account: 'devaccount'
    region: 'eu-west-1'
    # Protected prevents certain destructive actions from being run, unless
    # you are really sure you want to do. Default is false.
    protected: true
  prod:
    account: 'prodaccount'
    region: 'eu-west-1'
    protected: true
services:
  # The section can contain multiple services, if you need the separation.
  ui:
    type: 's3'
    # Destination bucket where published files are to be stored:
    bucket_name: '{{ stage.outputs.BucketName }}'
    # Local directory containing files to be published in S3:
    build:
      working_dir: '.'
      dist_dir: 'dist'